-- 코드를 입력하세요
SELECT *
FROM (SELECT * FROM CART_PRODUCTS WHERE NAME = 'Yogurt') Y JOIN
    (SELECT * FROM CART_PRODUCTS WHERE NAME = 'Milk') M
ON Y.CART_ID = M.CART_ID


-- 코드를 입력하세요
SELECT *
FROM (SELECT * FROM USER_INFO WHERE JOINED BETWEEN '2021-01-01' AND '2021-12-31') U JOIN
    (SELECT * FROM ONLINE_SALE WHERE SALES_DATE BETWEEN '2021-01-01' AND '2021-12-31') O
    ON U.USER_ID = O.USER_ID



SELECT *
FROM (SELECT * 
      FROM USER_INFO 
      WHERE JOINED BETWEEN '2021-01-01' AND '2021-12-31'
      AND USER_ID IN (SELECT USER_ID 
                      FROM ONLINE_SALE) 



SELECT ROUND( (SELECT COUNT(*) FROM USER_INFO WHERE JOINED BETWEEN '2021-01-01' AND '2021-12-31'),1) C
FROM ONLINE_SALE


그룹바이후 정렬은 그룹을 정렬할수있는 걸로만 정렬해야한다.
SELECT 절에 그룹과 상관없은 칼럼은 아무 의미가 없다 그냥 순서중 젤 앞에꺼가 나옴

함수정리 

조인 정리  

NULL처리 정리
WHERE NOT A IS NULL

CONCAT

YEAR

mysql rank

중복값 처리

SELECT DATEDIFF(DAY,   '2021-06-12', '2021-07-13') AS [일차이]
     , DATEDIFF(MONTH, '2021-06-12', '2021-07-13') AS [개월차이] 
     , DATEDIFF(YEAR,  '2021-06-12', '2021-07-13') AS [년차이]

SELECT DATEDIFF(HOUR,   '2021-07-13 19:10:00', '2021-07-13 20:20:00') AS [시간차이]
     , DATEDIFF(MINUTE, '2021-07-13 19:10:00', '2021-07-13 20:20:00') AS [분차이] 
     , DATEDIFF(SECOND, '2021-07-13 19:10:00', '2021-07-13 20:20:00') AS [초차이]

디비 쿼리는 일종의 반복문이다 쿼리 자체가 반복문


SET @HOUR = -1;
SELECT (@HOUR := @HOUR +1) AS HOUR,
    (SELECT COUNT(HOUR(DATETIME)) 
    FROM ANIMAL_OUTS 
    WHERE HOUR(DATETIME)=@HOUR) AS COUNT 
    FROM ANIMAL_OUTS
WHERE @HOUR < 23;
